#!/usr/bin/env ruby

require 'routler'
require 'commander/import'

program :version, Routler::VERSION
program :description, 'convert your rails routes to a CSV for reporting, processing, etc'

default_command :build

command :build do |c|
  c.syntax = 'routler build filename [options]'
  c.summary = 'build csv from routes'
  c.description = <<-EOF
Builds CSV files for your rail routes. 'filename' is assumed to be a file that
holds the output of a rake routes run.  If no filename is passed, routler will
run rake routes in your cwd and use the contents out its output.

build is the default command so you can actually drop the build argument in all
of the following examples
EOF
  c.example 'run rake routes in cwd and output csv to stdout', 'routler build'
  c.example 'process input_file and write csv to stdout', 'routler build input_file'
  c.example 'process input_file and write csv to a file named routes.csv', 'routler build input_file -o routes.csv'
  c.option '--output STRING', 'output file path'
  c.option '--stats BOOL', 'output stats'
  c.action do |args, options|
    options.default output: 'stdout', stats: false
    formatter = Routler::Formatters::Csv.new
    cs = Routler::Consumer.new
    parser = Routler::Parser.new
    csv_content = formatter.format(parser.parse(cs.load_file(args[0])))
    Routler::Presenter.new.display csv_content, options.output
  end
end

